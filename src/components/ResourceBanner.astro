---
import { extractOpengraph } from '../opengraph'
import CoverImage from './CoverImage.astro'

const {
    title,
    author,
    type,
    resourceUrl,
} = Astro.props

const opengraph = await extractOpengraph(resourceUrl)

const phraseForOriginal = ((type) => {
    switch(type) {
        case 'article': return 'Read original article'
        case 'video': return 'Watch original video'
        case 'image': return 'View original image'
        default: return 'See original resource'
    }
})(type)
---

<header>
    <h1 class="title">{title}</h1>
    <address class="author">By <a rel="author" href={author.link}>{author.name}</a></address>
    <span class="resource"><a class="button" href={resourceUrl}>{phraseForOriginal}</a></span>
    <div class="cover"><CoverImage src={opengraph.image.url.href} width={opengraph.image.width} height={opengraph.image.height} /></div>
</header>

<style>
    header {
        display: grid;
        grid-template:
            "title title" auto
            "author cover" 1fr
            "resource cover" auto
            / 2fr 1fr;
        row-gap: var(--sp-st-o);
        margin-bottom: var(--sp-st-cd);
    }

    .title {
        grid-area: title;
        text-align: center;
        font-size: var(--font-sz-jupiter);
        font-weight: bold;
    }

    .author {
        grid-area: author;
        place-self: end start;
        font-style: normal;
    }

    .resource {
        grid-area: resource;
    }

    .cover {
        grid-area: cover;
    }

    @media screen and (min-width: 52rem) {
        header {
            grid-template:
            "title cover" auto
            "author cover" 1fr
            "resource cover" auto
            / 5fr 2fr;
        }

        .title {
            text-align: left;
        }
    }
</style>